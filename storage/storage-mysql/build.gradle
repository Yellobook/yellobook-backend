plugins {
    id 'java-library'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'jacoco'
    id "maven-publish"
    id "java-test-fixtures"
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation project(path: ':core:core-enum')
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // p6spy
    implementation "p6spy:p6spy:3.9.1"

    // h2
    testRuntimeOnly 'com.h2database:h2'

    // testcontainers
    testImplementation 'org.testcontainers:testcontainers:1.20.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.1'
    testImplementation "org.testcontainers:mysql:1.20.1"
    testImplementation "com.redis:testcontainers-redis:2.2.2"

    // testFixtures
    testFixturesImplementation project(":core:core-enum")
    testFixturesImplementation 'org.junit.jupiter:junit-jupiter-api'
    testFixturesImplementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    testFixturesRuntimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    testFixturesRuntimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

}

configurations {
    configureEach {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

processResources.dependsOn('copyConfig')

tasks.register('copyConfig', Copy) {
    from '../../Config/yellobook-domain/'
    include "application*.yml"
    into 'src/main/resources'
}
