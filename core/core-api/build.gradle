plugins {
    id 'idea'
}

sourceSets {
    integrationTest {
        java.srcDir "$projectDir/src/integration-test/java"
        resources.srcDir "$projectDir/src/integration-test/resources"
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

idea {
    module {
        testSources.from(sourceSets.integrationTest.java.srcDirs)
        testResources.from(sourceSets.integrationTest.resources.srcDirs)
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    implementation project(":storage:storage-mysql")
    implementation project(":storage:storage-redis")
    implementation project(':core:core-enum')

    // testFixtures
    testImplementation(testFixtures(project(":storage:storage-mysql")))

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter'

    // Apache POI
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.xmlbeans:xmlbeans:3.1.0'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // lombok (test)
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // mapStruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // logback slack
    implementation 'com.github.maricn:logback-slack-appender:1.6.1'

    // spring boot test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // rest assured
    integrationTestImplementation 'io.rest-assured:rest-assured:5.3.1'
    integrationTestImplementation 'io.rest-assured:json-path:5.3.1'

    // testcontainers
    integrationTestImplementation 'org.testcontainers:testcontainers:1.20.1'
    integrationTestImplementation 'org.testcontainers:junit-jupiter:1.20.1'
    integrationTestImplementation "org.testcontainers:mysql:1.20.1"
    integrationTestImplementation "com.redis:testcontainers-redis:2.2.2"

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
}

tasks.register('copyConfig', Copy) {
    from '../../Config/yellobook-api/'
    include "application*.yml"
    into 'src/main/resources'
}

tasks.register('integrationTest', Test) {
    group 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    useJUnitPlatform()
}

processResources.dependsOn('copyConfig')

check {
    dependsOn integrationTest
}
